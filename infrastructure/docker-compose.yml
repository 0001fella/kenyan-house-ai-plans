
version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: jmss_db
    environment:
      POSTGRES_DB: jmss_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-jmss123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - jmss_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and Celery
  redis:
    image: redis:7-alpine
    container_name: jmss_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - jmss_network

  # Django Backend
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: jmss_backend
    environment:
      - DEBUG=True
      - SECRET_KEY=${SECRET_KEY:-django-secret-key-change-in-production}
      - DB_HOST=db
      - DB_NAME=jmss_db
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD:-jmss123}
      - REDIS_URL=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=jmss.settings.development
    volumes:
      - ../backend:/app
      - media_files:/app/media
      - static_files:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - jmss_network
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py populate_data &&
             python manage.py runserver 0.0.0.0:8000"

  # React Frontend
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: jmss_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
      - REACT_APP_ENV=development
    volumes:
      - ../frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - jmss_network

volumes:
  postgres_data:
  redis_data:
  media_files:
  static_files:

networks:
  jmss_network:
    driver: bridge
